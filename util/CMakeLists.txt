
SET(ANGLE_SETUP_TARGET_NAME libANGLE_util)

# SET(HEADER_PATH ${PROJECT_SOURCE_DIR}/include/${ANGLE_SETUP_TARGET_NAME})

SET(ANGLE_SETUP_HEADERS
    # ${HEADER_PATH}/Export.h
)


FILE(GLOB this_SOURCES "*.cpp")
FILE(GLOB windows_SOURCES "windows/*.cpp")
FILE(GLOB win32_SOURCES "windows/win32/*.cpp")


SET(ANGLE_SETUP_SOURCES
    ${this_SOURCES}
    ${windows_SOURCES}
    ${win32_SOURCES}
)

add_definitions(-DGL_GLEXT_PROTOTYPES)
# add_definitions(-DNOMINMAX)

# add_definitions(-DANGLE_ENABLE_D3D11)
# add_definitions(-DANGLE_ENABLE_D3D9)
# add_definitions(-DANGLE_ENABLE_OPENGL)
# add_definitions(-DANGLE_ENABLE_NULL)
# add_definitions(-DANGLE_ENABLE_VULKAN)

# add_definitions(-DANGLE_ENABLE_GLSL)

# add_definitions(-DANGLE_EXPORT)


# IF(BUILD_STATIC_LIBRAY)
# ELSE(BUILD_STATIC_LIBRAY)
	add_definitions(-DLIBANGLE_UTIL_IMPLEMENTATION)
# ENDIF(BUILD_STATIC_LIBRAY)

# INCLUDE_DIRECTORIES(AFTER ${OPENGL_INCLUDE_DIR} )
INCLUDE_DIRECTORIES(AFTER ${PROJECT_SOURCE_DIR}/src )
INCLUDE_DIRECTORIES(AFTER ${PROJECT_SOURCE_DIR}/util )
# INCLUDE_DIRECTORIES(AFTER ${PROJECT_SOURCE_DIR}/src/common/third_party/base )
# INCLUDE_DIRECTORIES(AFTER ${PROJECT_SOURCE_DIR}/src/third_party/khronos )


ANGLE_SETUP_DYNAMIC_LIBRARY(ON)
TARGET_LINK_LIBRARIES( ${ANGLE_SETUP_TARGET_NAME} libEGL libGLESv2 )
ANGLE_SETUP_INSTALL()
ANGLE_SETUP_INSTALL_INCLUDE()

