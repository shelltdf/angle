
SET(ANGLE_SETUP_TARGET_NAME libGLESv1_CM)

# SET(HEADER_PATH ${PROJECT_SOURCE_DIR}/include/${ANGLE_SETUP_TARGET_NAME})

SET(ANGLE_SETUP_HEADERS
    # ${HEADER_PATH}/Export.h
)

SET(ANGLE_SETUP_SOURCES
    libGLESv1_CM.def
    libGLESv1_CM.cpp 
    
    ../libGLESv2/entry_points_gles_1_0_autogen.cpp
    ../libGLESv2/entry_points_gles_ext_autogen.cpp
    ../libGLESv2/global_state.cpp
)

# IF(BUILD_STATIC_LIBRAY)

# ELSE(BUILD_STATIC_LIBRAY)
		add_definitions(-DLIBGLESV2_IMPLEMENTATION)
		add_definitions(-DGL_APICALL="")
# ENDIF(BUILD_STATIC_LIBRAY)

INCLUDE_DIRECTORIES(AFTER ${PROJECT_SOURCE_DIR}/src )
INCLUDE_DIRECTORIES(AFTER ${PROJECT_SOURCE_DIR}/src/common/third_party/base )


ANGLE_SETUP_DYNAMIC_LIBRARY(ON)
TARGET_LINK_LIBRARIES( ${ANGLE_SETUP_TARGET_NAME} libANGLE ${RENDER_LIBRARY})
ANGLE_SETUP_INSTALL()
ANGLE_SETUP_INSTALL_INCLUDE()

